{"version":3,"sources":["pages/PasswordReset/PasswordReset.js"],"names":["useStyles","makeStyles","theme","paper","width","marginLeft","spacing","marginRight","breakpoints","up","avatar","margin","height","color","palette","secondary","main","form","marginTop","submit","container","display","flexDirection","alignItems","justifyContent","PasswordReset","classes","intl","useIntl","history","useHistory","useState","username","setUsername","pageTitle","formatMessage","id","defaultMessage","onBackClick","goBack","className","elevation","component","variant","onSubmit","event","preventDefault","replace","noValidate","value","onInput","e","target","required","fullWidth","label","name","autoComplete","autoFocus","type"],"mappings":"qPAUMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,OAAK,GACHC,MAAO,OACPC,WAAYH,EAAMI,QAAQ,GAC1BC,YAAaL,EAAMI,QAAQ,IAHxB,cAIFJ,EAAMM,YAAYC,GAAG,IAAMP,EAAMI,QAAQ,IAAM,CAC9CF,MAAO,IACPC,WAAY,OACZE,YAAa,SAPZ,0BASQL,EAAMI,QAAQ,IATtB,wBAUM,QAVN,8BAWY,UAXZ,2BAYS,UAZT,kCAaSJ,EAAMI,QAAQ,GAbvB,cAa+BJ,EAAMI,QAAQ,GAb7C,cAaqDJ,EAAMI,QAC5D,GAdC,UAiBLI,OAAQ,CACNC,OAAQT,EAAMI,QAAQ,GACtBF,MAAO,IACPQ,OAAQ,IACRC,MAAOX,EAAMY,QAAQC,UAAUC,MAEjCC,KAAM,CACJC,UAAWhB,EAAMI,QAAQ,IAE3Ba,OAAQ,CACNR,OAAQT,EAAMI,QAAQ,EAAG,EAAG,IAE9Bc,UAAW,CACTC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBZ,OAAO,YAqEIa,UAjEO,WACpB,IAAMC,EAAU1B,IACV2B,EAAOC,cACPC,EAAUC,cAHU,EAIMC,mBAAS,IAJf,mBAInBC,EAJmB,KAITC,EAJS,KAU1B,OACE,cAAC,IAAD,CACEC,UAAWP,EAAKQ,cAAc,CAC5BC,GAAI,iBACJC,eAAgB,mBAElBC,YAAa,WACXT,EAAQU,UANZ,SASE,cAAC,IAAD,CAAOC,UAAWd,EAAQvB,MAAOsC,UAAW,EAA5C,SACE,sBAAKD,UAAWd,EAAQN,UAAxB,UACE,cAAC,IAAD,CAAYsB,UAAU,KAAKC,QAAQ,KAAnC,SACGhB,EAAKQ,cAAc,CAClBC,GAAI,iBACJC,eAAgB,qBAGpB,uBAAMG,UAAWd,EAAQT,KAAM2B,SAvBvC,SAAsBC,GACpBA,EAAMC,iBACNjB,EAAQkB,QAAQ,YAqB6CC,YAAU,EAAjE,UACE,cAAC,IAAD,CACEC,MAAOjB,EACPkB,QAAS,SAACC,GAAD,OAAOlB,EAAYkB,EAAEC,OAAOH,QACrCN,QAAQ,WACRhC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTlB,GAAG,QACHmB,MAAO5B,EAAKQ,cAAc,CACxBC,GAAI,QACJC,eAAgB,WAElBmB,KAAK,QACLC,aAAa,QACbC,WAAS,IAGX,cAAC,IAAD,CACEC,KAAK,SACLL,WAAS,EACTX,QAAQ,YACR9B,MAAM,UACN2B,UAAWd,EAAQP,OALrB,SAOGQ,EAAKQ,cAAc,CAClBC,GAAI,iBACJC,eAAgB","file":"static/js/43.d8fdfd2e.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport React, { useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useIntl } from 'react-intl'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up(620 + theme.spacing(6))]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n      3\r\n    )}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    width: 192,\r\n    height: 192,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: `100%`,\r\n  },\r\n}))\r\n\r\nconst PasswordReset = () => {\r\n  const classes = useStyles()\r\n  const intl = useIntl()\r\n  const history = useHistory()\r\n  const [username, setUsername] = useState('')\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n    history.replace('/signin')\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage({\r\n        id: 'password_reset',\r\n        defaultMessage: 'Password reset',\r\n      })}\r\n      onBackClick={() => {\r\n        history.goBack()\r\n      }}\r\n    >\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <div className={classes.container}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            {intl.formatMessage({\r\n              id: 'password_reset',\r\n              defaultMessage: 'Password reset',\r\n            })}\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n            <TextField\r\n              value={username}\r\n              onInput={(e) => setUsername(e.target.value)}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label={intl.formatMessage({\r\n                id: 'email',\r\n                defaultMessage: 'E-Mail',\r\n              })}\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {intl.formatMessage({\r\n                id: 'password_reset',\r\n                defaultMessage: 'Reset Password',\r\n              })}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Paper>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n"],"sourceRoot":""}