{"version":3,"sources":["pages/HikingFrontend/Announcement.js","components/AnnouncementCard/AnnouncementCard.js"],"names":["style","basicStyle","fontStyle","useStyles","makeStyles","Attraction","history","useHistory","classes","attrData","pathwayInfo","announcement","className","appBar","position","arrow","onClick","push","titleText","basicPaper","map","news","i","pathLink","link","coverImage","img","title","date","source","gridcontain","marginRight","marginLeft","width","gridItem","height","margin","fontSize","color","mutedText","objectFit","borderRadius","minWidth","buttonBase","AnnouncementCard","props","coverImageAlt","rest","href","underline","container","spacing","justify","alignItems","item","xs","src","defaultProps"],"mappings":"+PAeMA,EAAK,2BACJC,KACAC,KAEDC,EAAYC,YAAWJ,GAmCdK,UAjCI,WACf,IAAMC,EAAUC,cACVC,EAAUL,IACVM,EAAWC,IAAYC,aAM7B,OACI,qCACI,cAAC,IAAD,CAAQC,UAAWJ,EAAQK,OAAQC,SAAS,SAA5C,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAeF,UAAWJ,EAAQO,MAAOC,QAPzD,WACIV,EAAQW,KAAK,gBAOD,cAAC,IAAD,CAAYL,UAAWJ,EAAQU,UAA/B,2CAGR,qBAAKN,UAAWJ,EAAQW,WAAxB,SACKV,EAASW,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,IAAD,CACIC,SAAUF,EAAKG,KACfC,WAAYJ,EAAKK,IACjBC,MAAON,EAAKM,MACZC,KAAMP,EAAKO,KACXC,OAAQR,EAAKQ,QACRP,a,0JCJvBnB,EAAYC,YAhCH,CACX0B,YAAa,CACTC,YAAa,QACbC,WAAY,QACZC,MAAO,QAEXC,SAAU,CACNpB,SAAU,WACVmB,MAAO,OACPE,OAAQ,OACRC,OAAQ,cAGZlB,UAAU,CACNmB,SAAS,OACTC,MAAM,WAEVC,UAAU,CACND,MAAM,WAEVZ,IAAK,CACDO,MAAM,OACNE,OAAO,GACPK,UAAU,QACVC,aAAa,EACbC,SAAS,IAEbC,WAAW,CACPP,OAAQ,gBAMD,SAASQ,EAAiBC,GAAQ,IAE7CtB,EAOEsB,EAPFtB,SACAE,EAMEoB,EANFpB,WAEAE,GAIEkB,EALFC,cAKED,EAJFlB,OACAC,EAGEiB,EAHFjB,KACAC,EAEEgB,EAFFhB,OACGkB,EARyC,YAS1CF,EAT0C,mEAUxCrC,EAAUL,IAEhB,OACE,cAAC,IAAD,CAAM6C,KAAMzB,EAAU0B,UAAU,OAAhC,SACE,eAAC,IAAD,yBAAMC,WAAS,GAAKH,GAApB,IAA0BnC,UAAWJ,EAAQsB,YAAaqB,QAAS,EACnEC,QAAQ,SACRC,WAAW,SAFX,UAIE,cAAC,IAAD,CAAMC,MAAI,EAAC1C,UAAWJ,EAAQ0B,SAAUqB,GAAI,EAA5C,SACE,cAAC,IAAD,CAAY3C,UAAWJ,EAAQmC,WAA/B,SACA,qBAAKa,IAAK/B,EAAYb,UAAWJ,EAAQkB,UAG3C,eAAC,IAAD,CAAM4B,MAAI,EAAEC,GAAI,EAAhB,UACI,cAAC,IAAD,CAAY3C,UAAWJ,EAAQU,UAA/B,SAA2CS,IAC3C,wBAAOf,UAAWJ,EAAQ+B,UAA1B,cAAuCX,EAAvC,MAAgDC,EAAhD,UAEJ,cAAC,IAAD,CAAMyB,MAAI,EAAEC,GAAI,GAAhB,SACE,cAAC,IAAD,YAQVX,EAAiBa,aAAe,CAC9BX,cAAe","file":"static/js/26.591fb71a.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\r\n//import IconButton from '@material-ui/core/IconButton/IconButton';\r\n// @material-ui/core components\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n// @material-ui icons\r\n// core components\r\nimport basicStyle from 'assets/jss/basicStyle';\r\nimport AnnouncementCard from \"../../components/AnnouncementCard/AnnouncementCard\";\r\nimport { pathwayInfo } from 'data/pathway';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport fontStyle from '../../assets/jss/fontStyle';\r\nconst style = {\r\n    ...basicStyle,\r\n    ...fontStyle,\r\n};\r\nconst useStyles = makeStyles(style);\r\n\r\nconst Attraction = () => {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const attrData = pathwayInfo.announcement;\r\n\r\n    //return to 7.0 page\r\n    function backhandleClick() {\r\n        history.push(\"./pathway\");\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar className={classes.appBar} position=\"static\">\r\n                <Toolbar>\r\n                    <ArrowBackIcon className={classes.arrow} onClick={backhandleClick} />\r\n                    <Typography className={classes.titleText}>步道消息</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.basicPaper} >\r\n                {attrData.map((news, i) => (\r\n                    <AnnouncementCard\r\n                        pathLink={news.link}\r\n                        coverImage={news.img}\r\n                        title={news.title}\r\n                        date={news.date}\r\n                        source={news.source}\r\n                        key={i}\r\n                    />\r\n                ))}\r\n            </div>\r\n       </>\r\n    );\r\n};\r\n\r\nexport default Attraction;\r\n","import { Divider } from '@material-ui/core';\r\n// @material-ui/core components\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from '@material-ui/core/Link';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst styles = {\r\n    gridcontain: {\r\n        marginRight: \"-15px\",\r\n        marginLeft: \"-15px\",\r\n        width: \"100%\",\r\n    },\r\n    gridItem: {\r\n        position: \"relative\",\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        margin: \"12px 0 0 0\",\r\n        /* flexBasis: \"auto\" */\r\n    },\r\n    titleText:{\r\n        fontSize:\"16px\",\r\n        color:\"#232323\"\r\n    },\r\n    mutedText:{\r\n        color:\"#979797\"\r\n    },\r\n    img: {\r\n        width:'100%',\r\n        height:72,\r\n        objectFit:'cover',\r\n        borderRadius:4,\r\n        minWidth:72\r\n    },\r\n    buttonBase:{\r\n        margin: \"0 0 0 16px\",\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function AnnouncementCard(props) {\r\n  const {\r\n    pathLink,\r\n    coverImage,\r\n    coverImageAlt,\r\n    title,\r\n    date,\r\n    source,\r\n    ...rest\r\n  } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link href={pathLink} underline=\"none\">\r\n      <Grid container {...rest} className={classes.gridcontain} spacing={2}\r\n      justify='center'\r\n      alignItems='center'\r\n      >\r\n        <Grid item className={classes.gridItem} xs={3} >\r\n          <ButtonBase className={classes.buttonBase}>\r\n          <img src={coverImage} className={classes.img}/>\r\n          </ButtonBase>\r\n        </Grid>\r\n        <Grid item  xs={9} >\r\n            <Typography className={classes.titleText}>{title}</Typography>\r\n            <small className={classes.mutedText}> {date} | {source} </small>\r\n        </Grid>\r\n        <Grid item  xs={12}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n    </Link>\r\n\r\n  );\r\n}\r\n\r\nAnnouncementCard.defaultProps = {\r\n  coverImageAlt: 'cover image'\r\n};\r\n\r\nAnnouncementCard.propTypes = {\r\n  pathLink: PropTypes.string.isRequired,\r\n  coverImage: PropTypes.string.isRequired,\r\n  coverImageAlt: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.node.isRequired,\r\n  source: PropTypes.string.isRequired,\r\n};\r\n"],"sourceRoot":""}